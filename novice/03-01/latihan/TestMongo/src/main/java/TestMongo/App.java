/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TestMongo;

import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.ServerAddress;

import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCollection;

import org.bson.Document;
import java.util.Arrays;
import com.mongodb.Block;

import com.mongodb.client.MongoCursor;
import static com.mongodb.client.model.Filters.*; 
import com.mongodb.client.result.DeleteResult;
import static com.mongodb.client.model.Updates.*;
import com.mongodb.client.result.UpdateResult;
import java.util.ArrayList;
import java.util.List;

public class App {
    public static void main(String[] args) {
        
        MongoClient mongoClient = new MongoClient();

        MongoDatabase database = mongoClient.getDatabase("coba");

        MongoCollection<Document> collection = database.getCollection("users");

        // Cara untuk query menambah data kedalam database
        // Document doc = new Document("name","MongoDB").append("age", 19).append("status", "pending");

        // collection.insertOne(doc);

        System.out.println("banyak dokumen dalam collection: " + collection.count());

        Document myFirstDoc = collection.find().first();
        System.out.println("Data pertama dalam collection di database: ");
        System.out.println(myFirstDoc.toJson());
        System.out.println();

        System.out.println("seluruh data dalam collection: ");
        for(Document cur : collection.find()){
            System.out.println(cur.toJson());
        }
        System.out.println();

        myFirstDoc = collection.find(eq("name","sue")).first();
        System.out.println("mencari data dengan field nama = aji yaitu :");
        System.out.println(myFirstDoc.toJson());
        System.out.println();

        // mengambil seluruh data yang umur nya lebih dari 18 tahun
        Block<Document> printBlock = new Block<Document>() {
            @Override
            public void apply(final Document document){
                System.out.println(document.toJson());
            }
        };
        System.out.println("mengambil seluruh data yang umur nya lebih dari 18 tahun: ");
        collection.find(gt("age",18)).forEach(printBlock);
        System.out.println();

        System.out.println("Update satu data dengan umur 19 menjadi 21");
        collection.updateOne(eq("age",21), new Document("$set", new Document("age",22)));
        
        // update data terbaru
        for(Document cur : collection.find()){
            System.out.println(cur.toJson());
        }
        System.out.println();


        // update multiple documents
        UpdateResult updateResult = collection.updateMany(lt("age",22), inc("age",23));
        System.out.println(updateResult.getModifiedCount());

        // Delete one document 
        System.out.println("menghapus data dengan nama = aji");
        collection.deleteOne(eq("name","aji"));
        System.out.println();

        // update data
        for(Document cur : collection.find()){
            System.out.println(cur.toJson());
        }
        System.out.println();

    }
}
